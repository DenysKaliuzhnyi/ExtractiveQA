steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/fastapi', '-f', 'fastapi.Dockerfile', '.']
    dir: '.'
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/fastapi']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/bot', '-f', 'bot.Dockerfile', '.']
    dir: '.'
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/bot']
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'fastapi'
      - '--image'
      - 'gcr.io/$PROJECT_ID/fastapi'
      - '--platform'
      - 'managed'
      - '--region'
      - '$_REGION'
      - '--memory'
      - '$_MODEL_MEMORY'
      - '--allow-unauthenticated'
    id: 'deploy-fastapi'
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        FASTAPI_URL=$(gcloud run services describe fastapi --platform managed --region $_REGION --format 'value(status.url)')
        echo "FASTAPI_URL=$FASTAPI_URL" > $HOME/FASTAPI_URL.txt
    id: 'get-fastapi-url'
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'bot'
      - '--image'
      - 'gcr.io/$PROJECT_ID/bot'
      - '--platform'
      - 'managed'
      - '--region'
      - '$_REGION'
      - '--set-env-vars'
      - 'API_URL=http://fastapi,WEBHOOK_URL=$(cat $HOME/FASTAPI_URL.txt)'
    id: 'deploy-bot'
images:
  - 'gcr.io/$PROJECT_ID/fastapi'
  - 'gcr.io/$PROJECT_ID/bot'
substitutions:
  _REGION: europe-west1
  _MODEL_MEMORY: 2Gi
options:
  logging: CLOUD_LOGGING_ONLY